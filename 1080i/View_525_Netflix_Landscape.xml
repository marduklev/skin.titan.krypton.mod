<?xml version="1.0" encoding="utf-8"?>
<!--Titan-->
<includes>
    <include name="View_525_Netflix_Landscape">
	<!--Panel-->
        <control type="group">
            <width>100%</width>
            <height>100%</height>
            <visible>Control.IsVisible(525)</visible>
            <visible>Integer.IsGreater(Container.NumItems,0)</visible>
            <include>animation_view_change</include>
            <!-- background image + overlay slim right corner overlay-->
            <control type="image">
                <width>100%</width>
                <height>100%</height>
				<texture colordiffuse="$VAR[Netflix2_PanelColor]">colors/color_white.png</texture>
            </control>
            <control type="image">
				<fadetime>350</fadetime>
                <texture background="true">$VAR[backgroundVar]</texture>
                <aspectratio aligny="top">scale</aspectratio>
				<animation effect="zoom" start="110" end="130" center="auto" time="12000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(BackgroundAnimation)">Conditional</animation>
                <animation effect="slide" start="-10,-10" end="10,10" time="8000" tween="cubic" easing="inout" pulse="true" condition="Skin.HasSetting(BackgroundAnimation)">Conditional</animation>
                <visible>!Skin.HasSetting(View525_DetailsShowFanart)</visible>
				<animation effect="fade" start="100" end="40" delay="200" time="1500" pulse="false" condition="Player.HasVideo">Conditional</animation>
            </control>
            <!-- overlay without big thumb -->
            <control type="image">
                <width>100%</width>
                <height>100%</height>
                <texture colordiffuse="$VAR[Netflix2_PanelColor]">colors/color_white.png</texture>
                <animation effect="fade" start="100" end="30" delay="0" time="0" condition="true">Conditional</animation>
                <visible>!Skin.HasSetting(View525_DetailsShowFanart)</visible>
            </control>
            <control type="image">
                <width>100%</width>
                <height>100%</height>
                <texture colordiffuse="$VAR[Netflix2_PanelColor]">special://home/addons/resource.images.backgroundoverlays.basic/resources/Side by Side.png</texture>
                <animation effect="fade" start="100" end="95" delay="0" time="0" condition="true">Conditional</animation>
                <visible>!Skin.HasSetting(View525_DetailsShowFanart)</visible>
            </control>
            <!-- spotlight section -->
            <control type="group" id="3505">
                <width>100%</width>
                <height>800</height>
                <!-- preview video window -->
               	<control type="group">
					<right>0</right>
					<top>0</top>
					<width>1344</width>
                    <height>756</height>
					<visible>Player.HasVideo</visible>
					<visible>!skin.hastheme(classic)</visible>
					<animation effect="slide" start="0" end="0,-80" time="0" condition="Integer.IsEqual(VideoPlayer.VideoAspect,2.4) | Integer.IsEqual(VideoPlayer.VideoAspect,1.85) | Integer.IsEqual(VideoPlayer.VideoAspect,2.35) | Integer.IsEqual(VideoPlayer.VideoAspect,2.55) | Integer.IsEqual(VideoPlayer.VideoAspect,2.76)" reversible="true">Conditional</animation>
						<control type="videowindow">
						</control>	
						<control type="image">
                        <texture colordiffuse="$VAR[Netflix2_PanelColor]">overlay/Netflix_origin.png</texture>
				   </control>
				 </control>
				<!-- spotlight image -->
                <control type="image">
                    <fadetime>350</fadetime>
                    <width>1280</width>
					<height>770</height>
					<right>0</right>
                    <top>0</top>
                    <texture background="true" diffuse="special://home/addons/resource.images.backgroundoverlays.basic/resources/Right Corner.png">$VAR[netflixThumb]</texture>
                    <aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
                    <visible>Skin.HasSetting(View525_DetailsShowFanart)</visible>
					<animation effect="fade" start="100" end="0" delay="200" time="1500" pulse="false" condition="Player.HasVideo">Conditional</animation>
                </control>
                <!-- rating STARS -->
				<control type="group">
                    <posx>65</posx>
                    <top>288</top>
                    <include>StarRatingNetflix</include>
                </control>
                 <!-- clearlogo -->
                <control type="image" id="29477">
                    <height>230</height>
                    <width>700</width>
                    <left>10</left>
                    <top>10</top>
                    <aspectratio align="center" aligny="top">keep</aspectratio>
                    <texture background="true" fallback="colors/color_transparent.png">$VAR[ListItemClearLogo]</texture>
                    <visible>!String.IsEmpty(Control.GetLabel(29477))</visible>
                </control>
				<!-- clearlogo n/a -->		  
				<control type="textbox">
                    <height>300</height>
                    <width>800</width>
                    <left>70</left>
                    <top>20</top>
                    <font>Bold55</font>
                    <align>left</align>
                    <aligny>center</aligny>
                    <label>[UPPERCASE]$INFO[ListItem.Title][/UPPERCASE]</label>
                    <textcolor>$INFO[Skin.String(ViewNetfixHighlightTextColor)]</textcolor>
                    <visible>[String.Contains(Control.GetLabel(29477),color_transparent) + Container.Content(tvshows)] | [String.Contains(Control.GetLabel(29477),color_transparent) + Container.Content(movies)] | [String.Contains(Control.GetLabel(29477),color_transparent) + Container.Content(sets)]</visible> 
				</control>
				<!-- details -->
                <control type="group">
                    <posx>250</posx>
                    <top>297</top>
                    <include>Netflix_FlagsDetails</include>
					<animation effect="slide" start="0" end="-168,0" condition="String.IsEmpty(ListItem.UserRating) + String.IsEmpty(Window(Home).Property(ListItem.UserRating)) + String.IsEmpty(Window(Home).Property(ListItem.UserRating)) 
                                + String.IsEmpty(ListItem.Rating) + String.IsEmpty(Window(Home).Property(ListItem.Rating)) + String.IsEmpty(Window(Home).Property(ListItem.Rating)) 
                                + String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Rating))">Conditional
					</animation>
                </control>
				<!-- title for season and episodes -->
                <control type="textbox">
                    <height>60</height>
                    <width>800</width>
                    <left>73</left>
                    <top>230</top>
                    <font>Bold40</font>
                    <align>left</align>
                    <aligny>top</aligny>
                    <label>$INFO[ListItem.Label]</label> 
                    <textcolor>$INFO[Skin.String(ViewNetfixHighlightTextColor)]</textcolor>
                    <visible>Container.Content(episodes) | Container.Content(seasons)</visible>
                </control>
				<!-- subtitle: MOTTO for Movies-->
                <control type="label">
                    <height>30</height>
					<top>250</top>
					<left>70</left>
                    <width>800</width>
                    <font>Reg28</font>
                    <align>left</align>
                    <aligny>center</aligny>
                    <textcolor>$INFO[Skin.String(ViewNetfixHighlightTextColor)]</textcolor> <!-- default is $INFO[Skin.String(ViewDetailsTextColor)] , alternative $INFO[Skin.String(ViewDetailsHighlightTextColor)], if its not black -->
                    <label>[I]$VAR[View525_SubTitle][/I]</label>
                    <visible>Container.Content(movies)</visible>
                </control>
				<!-- plot -->
                <control type="grouplist">
                    <width>38%</width>
                    <posx>71</posx>
                    <posy>350</posy>
                    <height>200</height>
                    <orientation>vertical</orientation>
					<control type="textbox">
                        <height>150</height>
                        <label>$VAR[Plots]</label>
                        <textcolor>$INFO[Skin.String(NetflixSecondaryTextColor)]</textcolor>
                        <align>justify</align>
                        <font>Reg24</font>
					</control>
				   <!-- genre -->
					<control type="group">
						<include>Netflix_Genre</include>
					</control>
					<!--<control type="group">
						<posx>250</posx>
						<top>297</top>
						<include>Netflix_Status</include>
					</control>
					-->
				</control>
				 <!-- media flags , fixed -->
                <control type="group">
					<posx>80</posx>
                    <height>52</height>
                    <top>640</top>
                    <include>mediaflags</include>
					<visible>Skin.HasSetting(View525_UseFixedLayout)</visible>
					<animation effect="zoom" alignx="true" end="80,80" time="0" condition="Skin.String(mediaflagsstyle,large) | Skin.String(mediaflagsstyle,large_color)">Conditional</animation>
				</control>
				<!-- media flags , non-fixed -->
				<control type="group">
					<left>60</left>
                    <height>52</height>
                    <top>580</top>
                    <include>mediaflags</include>
					<visible>!Skin.HasSetting(View525_UseFixedLayout)</visible>
					<!-- <animation effect="slide" end="-280,-5" time="0" condition="String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,tvshow)">Conditional</animation>
					 -->
					<!-- <animation effect="zoom" alignx="true" end="80,80" time="0" condition="!String.IsEqual(ListItem.DBTYPE,movie) + [Skin.String(mediaflagsstyle,large) | Skin.String(mediaflagsstyle,large_color)]">Conditional</animation>
					<animation effect="zoom" alignx="true" end="80,80" time="0" condition="String.IsEqual(ListItem.DBTYPE,movie) + [Skin.String(mediaflagsstyle,large) | Skin.String(mediaflagsstyle,large_color)]">Conditional</animation>
					-->
					<animation effect="zoom" alignx="true" end="80,80" time="0" condition="[Skin.String(mediaflagsstyle,large) | Skin.String(mediaflagsstyle,large_color)]">Conditional</animation>
				</control>
                <!-- rating , fixed -->
                <control type="group">
					<visible>String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season)</visible>
                    <right>20</right>
                    <height>150</height>
                    <width>1000</width>
                    <top>540</top>
                    <include condition="[Skin.HasSetting(StudioInFooter) | Skin.HasSetting(IMDBRatingInFooter) | Skin.HasSetting(TV_TMdbRatingInFooter) | Skin.HasSetting(RTRatingInFooter)]">AltRatingFooter</include>
					<visible>Skin.HasSetting(View525_UseFixedLayout)</visible>
				</control>
				<!-- rating , non-fixed -->
				<control type="group">
					<visible>String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season)</visible>
                    <right>20</right>
                    <height>150</height>
                    <width>1000</width>
                    <top>480</top>
                    <include condition="[Skin.HasSetting(StudioInFooter) | Skin.HasSetting(IMDBRatingInFooter) | Skin.HasSetting(TV_TMdbRatingInFooter) | Skin.HasSetting(RTRatingInFooter)]">AltRatingFooter</include>
					<visible>!Skin.HasSetting(View525_UseFixedLayout)</visible>
                </control>
				<!-- CAST on Trailer -->
				<control type="panel"> 
					<top>700</top>
					<left>630</left>
					<height>300</height>
					<width>1260</width>
					<orientation>horizontal</orientation>
					<visible>Player.HasVideo + Skin.HasSetting(ShowCastOnTrailer) + [String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.DBTYPE,movie)]</visible>
					<animation effect="fade" start="0" end="100" delay="200" time="1200" pulse="false" condition="Player.HasVideo">Conditional</animation>
					<itemlayout height="225" width="158">
						<control type="image">
							<texture border="1" diffuse="diffuse/poster.png" background="true" fallback="DefaultActor.png">$INFO[ListItem.Thumb]</texture>
							<aspectratio scalediffuse="true" aligny="top" align="center">scale</aspectratio>
							<bordersize>4</bordersize>
						</control>
						<control type="label">
							<font>reg18</font>
							<label>$INFO[ListItem.Label,[B],[/B][CR]]$INFO[ListItem.Label2]</label>
							<wrapmultiline>true</wrapmultiline>
							<textcolor>$INFO[Skin.String(NetflixPrimaryTextColor)]</textcolor>
							<top>220</top>
							<left>5</left>
							<width>150</width>
							<height>50</height>
							<aligny>top</aligny>
							<align>center</align>
							<textoffsetx>0</textoffsetx>
							<scroll>true</scroll>
							<scrollspeed>20</scrollspeed>
						</control>
					</itemlayout>
					<focusedlayout>-</focusedlayout>
					<content>$VAR[castInfo]</content>
                </control>
			</control>
            <!-- menu button,check, add extra touch buttons sometime  -->
            <control type="radiobutton" id="5001">
                <width>60</width>
                <height>60</height>
                <right>20</right>
                <top>20</top>
                <font>-</font>
                <selected>Control.HasFocus(5001)</selected>
                <texturefocus>-</texturefocus>
                <texturenofocus>-</texturenofocus>
                <textureradiofocus colordiffuse="$INFO[Skin.String(ButtonTextFocusColor)]">touchcontrols/icon_back.png</textureradiofocus>
                <textureradionofocus colordiffuse="$INFO[Skin.String(ButtonTextColor)]">touchcontrols/icon_back.png</textureradionofocus>
                <radiowidth>60</radiowidth>
                <radioheight>60</radioheight>
                <onclick>Close</onclick>
                <visible>Skin.HasSetting(EnableTouchSupport) + !Window.IsActive(Home)</visible>
                <ondown>510</ondown>
            </control>
            <!-- View 525 -->
			<include condition="Skin.HasSetting(View525_UseFixedLayout)">View525_layout_fixed</include>
			<include condition="!Skin.HasSetting(View525_UseFixedLayout)">View525_layout_normal</include>
            <control type="image">
				<bottom>118</bottom>
				<left>48</left>
				<width>484</width>
				<height>274</height>
				<texture border="2">netflix/frame/slimframe_hardedge.png</texture>
				<colordiffuse>$INFO[Skin.String(NetflixViewDetailsBorderFocusColor)]</colordiffuse>
				<visible>Skin.HasSetting(View525_UseFixedLayout)</visible>
			</control>
			<control type="image">
				<bottom>225</bottom>
				<left>14</left>
				<width>384</width>
				<height>225</height>
				<texture border="2">netflix/frame/slimframe_hardedge.png</texture> <!-- check,un-repack for themed(rounded) layout -->
				<colordiffuse>$INFO[Skin.String(NetflixViewDetailsBorderFocusColor)]</colordiffuse>
				<visible>!Skin.HasSetting(View525_UseFixedLayout)</visible>
				<animation effect="slide" start="0" end="-30,0" time="150" condition="Control.HasFocus(70) | Control.HasFocus(6002)">Conditional</animation>
				<animation effect="slide" end="380,0" time="300" condition="Container(525).Column(1)">conditional</animation>
				<animation effect="slide" end="760,0" time="300" condition="Container(525).Column(2)">conditional</animation>
				<animation effect="slide" end="1140,0" time="300" condition="Container(525).Column(3)">conditional</animation>
				<animation effect="slide" end="1520,0" time="300" condition="Container(525).Column(4)">conditional</animation>
			</control>
			<!-- discart fixed visible delay -->
			 <control type="image"> 
				<visible>Skin.HasSetting(View525_UseFixedLayout) + Skin.HasSetting(View525_ShowCDart)</visible>
                <width>200</width>
                <height>200</height>
				<bottom>80</bottom>
                <posx>480</posx>
				<fadetime>300</fadetime>
				<texture background="true" diffuse="diffuse/cdmask_new.png">$VAR[DiscArtImage]</texture>
				<aspectratio scalediffuse="false" align="center" aligny="center">scale</aspectratio>
				<visible>!Container.Content(episodes) | Container.Content(tvshows) | Container.Content(movies)</visible>
			</control> 
			
         	<!-- Scrollbars-->
			<control type="group">
				<!-- horizontal -->
				<control type="scrollbar" id="60">
					<visible>Skin.HasSetting(View525_UseFixedLayout) + Control.IsVisible(525) + Integer.IsGreater(Container.Numitems,4)</visible>
					<left>80</left>
					<bottom>1</bottom>
					<width>1760</width>
					<height>20</height>
					<onup>525</onup>
					<ondown>9000</ondown>
					<onleft>60</onleft>
					<onright>60</onright>
					<orientation>horizontal</orientation>
					<animation effect="fade" start="0" end="100" time="400" condition="[Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]">Conditional</animation>
					<animation effect="fade" start="100" end="0" time="400" condition="![Control.HasFocus(60) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]">Conditional</animation>					
				</control>
				<!-- vertical -->
				<control type="scrollbar" id="70">
					<visible>!Skin.HasSetting(View525_UseFixedLayout) + Control.IsVisible(525) + Integer.IsGreater(Container.Numitems,10)</visible>
					<right>5</right>
					<bottom>5</bottom>
					<width>17</width>
					<height>430</height>
					<onleft>525</onleft>
					<onright>9000</onright>
					<onup>70</onup>
					<ondown>70</ondown>
					<orientation>vertical</orientation>
					<animation effect="fade" start="0" end="100" time="400" condition="[Control.HasFocus(70) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]">Conditional</animation>
					<animation effect="fade" start="100" end="0" time="400" condition="![Control.HasFocus(70) | Skin.HasSetting(EnableTouchSupport) | Container.Scrolling | Skin.HasSetting(alwaysShowScrollbars)]">Conditional</animation>					
				</control>
			</control>
        </control>
 	</include>

    <include name="View525_layout_fixed">
		<control type="fixedlist" id="525">
            <focusposition>0</focusposition>
			 <orientation>horizontal</orientation>
			 <left>50</left>
			 <bottom>120</bottom>
			 <height>270</height>
			 <pagecontrol>60</pagecontrol>
			 <ondown condition="!Player.HasVideo + !Control.IsVisible(60)">9000</ondown>
			 <ondown condition="Skin.HasSetting(EnableQuickJump) + Control.IsVisible(60) + !Player.HasVideo">7000</ondown>
			 <ondown condition="!Skin.HasSetting(EnableQuickJump) + Control.IsVisible(60) + !Player.HasVideo">60</ondown>
			 <include>trailer_onup</include>
			 <include>View525_layout</include>
		</control>
	</include>
	
	<include name="View525_layout_normal">
		<control type="panel" id="525">
			 <orientation>vertical</orientation>
			 <pagecontrol>70</pagecontrol>
			 <left>15</left>
			 <bottom>10</bottom>
			 <height>440</height>
			 <onleft>9000</onleft>
			 <onright condition="!Control.IsVisible(70)">525</onright>
			 <onright condition="Skin.HasSetting(EnableQuickJump) + Control.IsVisible(70)">6000</onright>
			 <onright condition="!Skin.HasSetting(EnableQuickJump) + Control.IsVisible(70)">70</onright>
			 <onup>525</onup>
			 <ondown>525</ondown>
			 <include>View525_layout</include>
			 <animation effect="slide" start="0" end="-30,0" time="150" condition="Control.HasFocus(70) | Control.HasFocus(6002)">Conditional</animation>
		</control>
	</include>
    
    <include name="View525_layout">
        <viewtype label="31018">icons</viewtype>
		<scrolltime tween="cubic" easing="in">425</scrolltime>
		<width>1910</width>
		<preloaditems>2</preloaditems>
		<visible>String.IsEqual(Window(Home).Property(SkinHelper.ForcedView),525) | String.IsEmpty(Window(Home).Property(SkinHelper.ForcedView))</visible>
		<onleft>525</onleft>
        <onright>525</onright>
		<!-- non fixed -->
        <itemlayout width="380" height="224" condition="!Skin.HasSetting(View525_UseFixedLayout)">
			<control type="group">
				<width>382</width>
				<height>224</height>
				<include>ThumbsViewItemLayout</include>
				<animation effect="fade" start="100" end="20" delay="200" time="1200" pulse="false" condition="Player.HasVideo">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,310" delay="100" time="1000" pulse="false" condition="Player.HasVideo + Skin.HasSetting(ShowCastOnTrailer)">Conditional</animation>
			</control> 
        </itemlayout>
        <focusedlayout width="380" height="220" condition="!Skin.HasSetting(View525_UseFixedLayout)">
			<control type="group">
				<width>382</width>
				<height>224</height>
						
				<include>AutoTrailerButton</include>
				<include>ThumbsViewItemLayout</include>
			</control>
		</focusedlayout>
		<!-- fixed -->
        <itemlayout width="480" height="269" condition="Skin.HasSetting(View525_UseFixedLayout)">
			<control type="group">
				<width>480</width>
				<height>269</height>
				<include>ThumbsViewItemLayout</include>
				<animation effect="fade" start="100" end="20" delay="200" time="1200" pulse="false" condition="Player.HasVideo">Conditional</animation>
				<animation effect="slide" start="0,0" end="0,310" delay="100" time="1000" pulse="false" condition="Player.HasVideo + Skin.HasSetting(ShowCastOnTrailer)">Conditional</animation>
			</control>
        </itemlayout>
        <focusedlayout width="480" height="269" condition="Skin.HasSetting(View525_UseFixedLayout)">
			<control type="group">
				<width>480</width>
				<height>269</height>
				<include>AutoTrailerButton</include>
				<include>ThumbsViewItemLayout</include>
			</control>
		</focusedlayout>
	</include>
    
    <variable name="View525_FallbackTitle">
        <value condition="Container.Content(episodes)">$INFO[ListItem.TvshowTitle]</value>
        <value>$INFO[ListItem.Title]</value>
    </variable>
    
    <variable name="View525_SubTitle">
        <value condition="Container.Content(episodes)">$INFO[ListItem.Label]</value>
        <value>$INFO[ListItem.TagLine]</value>
    </variable>
</includes>